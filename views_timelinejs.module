<?php
/**
 * @file
 * Views TimelineJS API, theming, libraries, etc.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_views_api().
 */
function views_timelinejs_views_api() {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'views_timelinejs'),
  );
}

/**
 * Implements hook_library().
 */
function views_timelinejs_library() {
  global $base_url;
  $libraries = array();

  $libraries['timelinejs_cdn'] = array(
    'title' => 'TimelineJS CDN',
    'website' => 'https://timeline.knightlab.com',
    'version' => '3.3.15',
    'js' => array(
      'timeline.js' => array(
        'data' => 'https://cdn.knightlab.com/libs/timeline3/latest/js/timeline.js',
        'type' => 'external',
        'group' => JS_LIBRARY,
      ),
    ),
    'css' => array(
      'timeline.css' => array(
        'data' => 'https://cdn.knightlab.com/libs/timeline3/latest/css/timeline.css',
        'type' => 'external',
        'group' => 200,
      ),
    ),
  );
  $libraries['timelinejs_local'] = array(
    'title' => 'TimelineJS',
    'website' => 'https://timeline.knightlab.com',
    'version' => '3.3.15',
    'js' => array(
      'timeline.js' => array(
        'data' => $base_url . '/sites/all/libraries/TimelineJS3/compiled/js/timeline.js',
        'type' => 'external',
        'group' => JS_LIBRARY,
      ),
    ),
    'css' => array(
      'timeline.css' => array(
        'data' => $base_url . '/vendor/TimelineJS3/compiled/css/timeline.css',
        'type' => 'external',
        'group' => 200,
      ),
    ),
  );

  // Create a library for each TimelineJS3 alternate font set.
  foreach (array_keys(_views_timelinejs_list_font_sets()) as $set) {
    $libraries['timelinejs_cdn_' . $set] = array(
      'title' => 'TimelineJS CDN ' . $set,
      'website' => 'https://timeline.knightlab.com',
      'version' => '3.3.15',
      'css' => array(
        'font.' . $set . '.css' => array(
          'data' => 'https://cdn.knightlab.com/libs/timeline3/latest/css/fonts/font.' . $set . '.css',
          'type' => 'external',
          'group' => 201,
        ),
      ),
    );
    $libraries['timelinejs_local_' . $set] = array(
      'title' => 'TimelineJS ' . $set,
      'website' => 'https://timeline.knightlab.com',
      'version' => '3.3.15',
      'css' => array(
        'font.' . $set . '.css' => array(
          'data' => $base_url . '/vendor/TimelineJS3/compiled/css/fonts/font.' . $set . '.css',
          'type' => 'external',
          'group' => 201,
        ),
      ),
    );
  }

  return $libraries;
}

/**
 * Returns an array of font set options that are supported by TimelineJS3.
 *
 * @return array
 *   An array of font set names, keyed by the name section of the set's CSS
 *   filename, i.e. 'font.set-name.css'.
 */
function _views_timelinejs_list_font_sets() {
  return array(
    'abril-droidsans' => 'Abril Fatface & Droid Sans',
    'amatic-andika' => 'Amatic & Andika',
    'bevan-pontanosans' => 'Bevan & Pontano Sans',
    'bitter-raleway' => 'Bitter & Raleway',
    'clicker-garamond' => 'Clicker & Garamond',
    'dancing-ledger' => 'Dancing & Ledger',
    'default' => 'Default',
    'fjalla-average' => 'Fjalla & Average',
    'georgia-helvetica' => 'Georgia & Helvetica',
    'knightlab' => 'Knight Lab',
    'lustria-lato' => 'Lustria Lato',
    'medula-lato' => 'Medula One & Lato',
    'oldstandard' => 'Old Standard',
    'opensans-gentiumbook' => 'Open Sans & Gentium Book Basic',
    'playfair-faunaone' => 'Playfair & Fauna One',
    'playfair' => 'Playfair SC & Playfair',
    'pt' => 'PT Sans / PT Serif / PT Sans Narrow',
    'roboto-megrim' => 'Roboto Slab & Megrim',
    'rufina-sintony' => 'Rufina & Sintony',
    'ubuntu' => 'Ubuntu',
    'unicaone-vollkorn' => 'Unica One & Vollkorn',
  );
}

/**
 * Implements hook_help().
 */
function views_timelinejs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Help for the settings form.
    case 'views_timelinejs.admin':
      return '<p>' . t('Configure how the Views TimelineJS plugin behaves on the site. Select whether to use a CDN or serve the library locally.') . '</p>';
  }
}
